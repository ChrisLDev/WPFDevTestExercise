<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="{DynamicResource TextColour}"/>
        <Setter Property="Background"  Value="{DynamicResource ElementBrush}" />
		<Setter Property="BorderBrush" Value="Red" />
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">

                    <Grid VerticalAlignment="Center" SnapsToDevicePixels="True">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Width="40" Height="20"
							  Margin="0" HorizontalAlignment="Left" >

                            <Border x:Name="border"
								Grid.ColumnSpan="1"
								Width="Auto"
								Height="20"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								Background="White"
								BorderBrush="{DynamicResource ElementBorderBrush}"
								BorderThickness="1"
								CornerRadius="10">
                                <UniformGrid Columns="2" >

                                    <!--<Path Stroke="White" StrokeThickness="1"
										  VerticalAlignment="Center" HorizontalAlignment="Center"
										  Data="M0,6 L4,10 L12,0" />

									<Path Stroke="Gray" StrokeThickness="1" 
										  VerticalAlignment="Center" HorizontalAlignment="Center"
										  Data="M0,0 L10,10 M10,0 L0,10" />-->

                                </UniformGrid>
                            </Border>

                            <Border Grid.ColumnSpan="1"
									Width="Auto"
									Height="20"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center"/>

                            <Grid x:Name="toggle" 
								Width="20"
								Height="20"
								Margin="0,0,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center">

                                <Border Grid.ColumnSpan="1"
										Width="20"
										Height="20"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										CornerRadius="10">
                                </Border>

                                <Border x:Name="toggleDot" Grid.ColumnSpan="1"
										Width="20"
										Height="20"
										Margin="0,0,0,0"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										Background="White"						
										BorderThickness="2"
										CornerRadius="10" />
                            </Grid>
                        </Grid>
                        <ContentPresenter Grid.Column="1"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="Top"
										  Focusable="False"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="{StaticResource Opacity_Disabled}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="toggle" Property="Margin" Value="20,0,0,0" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="toggleDot" Property="Background" Value="White"/>
                        </Trigger>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="toggle" Property="Margin" Value="0,0,0,0" />
							<Setter TargetName="border" Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="LightGray"/>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>